{"name": "test_web_table_add_person[input_data390]", "status": "skipped", "statusDetails": {"message": "XFAIL Negative data tests\n\nAssertionError: New person is not equal to the old person.\nassert ('26aaaaaaaaaaaaaaaaaaafirs', '25aaaaaaaaaaaaaaaaaaalast', '0', 'A-9@b.ru', '9999999999', 'UPPERDEP') == ('26aaaaaaaaaaaaaaaaaaafirst', '25aaaaaaaaaaaaaaaaaaalast', '0', 'A-9@b.ru', '9999999999', 'UPPERDEP')\n  At index 0 diff: '26aaaaaaaaaaaaaaaaaaafirs' != '26aaaaaaaaaaaaaaaaaaafirst'\n  Full diff:\n    (\n  -  '26aaaaaaaaaaaaaaaaaaafirst',\n  ?                            -\n  +  '26aaaaaaaaaaaaaaaaaaafirs',\n     '25aaaaaaaaaaaaaaaaaaalast',\n     '0',\n     'A-9@b.ru',\n     '9999999999',\n     'UPPERDEP',\n    )", "trace": "self = <elements_page_test.TestElements.TestWebTables object at 0x000000C3A8366510>\ninput_data = ['26aaaaaaaaaaaaaaaaaaafirst', '25aaaaaaaaaaaaaaaaaaalast', 'A-9@b.ru', '0', '9999999999', 'UPPERDEP']\n\n    def test_web_table_add_person(self, input_data):\n        \"\"\" Check if one new person could be added in the list \"\"\"\n        expected_person = self.web_table_page.create_specified_person(input_data)\n    \n        with allure.step('Check if form is closed'):\n            assert self.web_table_page.get_form_status_is_closed() == 1, \\\n                'Registration Form is not closed after submitting!'\n    \n        actual_person = self.web_table_page.get_last_person()\n    \n        with allure.step('Check data equality'):\n>           assert actual_person == expected_person, 'New person is not equal to the old person.'\nE           AssertionError: New person is not equal to the old person.\nE           assert ('26aaaaaaaaaaaaaaaaaaafirs', '25aaaaaaaaaaaaaaaaaaalast', '0', 'A-9@b.ru', '9999999999', 'UPPERDEP') == ('26aaaaaaaaaaaaaaaaaaafirst', '25aaaaaaaaaaaaaaaaaaalast', '0', 'A-9@b.ru', '9999999999', 'UPPERDEP')\nE             At index 0 diff: '26aaaaaaaaaaaaaaaaaaafirs' != '26aaaaaaaaaaaaaaaaaaafirst'\nE             Full diff:\nE               (\nE             -  '26aaaaaaaaaaaaaaaaaaafirst',\nE             ?                            -\nE             +  '26aaaaaaaaaaaaaaaaaaafirs',\nE                '25aaaaaaaaaaaaaaaaaaalast',\nE                '0',\nE                'A-9@b.ru',\nE                '9999999999',\nE                'UPPERDEP',\nE               )\n\ntests\\elements_page_test.py:91: AssertionError"}, "description": " Check if one new person could be added in the list ", "steps": [{"name": "Create specified person", "status": "passed", "steps": [{"name": "\"Add\" click", "status": "passed", "start": 1693431108069, "stop": 1693431108383}, {"name": "Fill the form", "status": "passed", "start": 1693431108383, "stop": 1693431108747}, {"name": "\"Submit\" click", "status": "passed", "start": 1693431108747, "stop": 1693431109003}], "parameters": [{"name": "input_list", "value": "['26aaaaaaaaaaaaaaaaaaafirst', '25aaaaaaaaaaaaaaaaaaalast', 'A-9@b.ru', '0', '9999999999', 'UPPERDEP']"}], "start": 1693431108069, "stop": 1693431109003}, {"name": "Check if form is closed", "status": "passed", "steps": [{"name": "Get form status", "status": "passed", "start": 1693431109003, "stop": 1693431109007}], "start": 1693431109003, "stop": 1693431109007}, {"name": "Get last person", "status": "passed", "start": 1693431109007, "stop": 1693431109047}, {"name": "Check data equality", "status": "failed", "statusDetails": {"message": "AssertionError: New person is not equal to the old person.\nassert ('26aaaaaaaaaaaaaaaaaaafirs', '25aaaaaaaaaaaaaaaaaaalast', '0', 'A-9@b.ru', '9999999999', 'UPPERDEP') == ('26aaaaaaaaaaaaaaaaaaafirst', '25aaaaaaaaaaaaaaaaaaalast', '0', 'A-9@b.ru', '9999999999', 'UPPERDEP')\n  At index 0 diff: '26aaaaaaaaaaaaaaaaaaafirs' != '26aaaaaaaaaaaaaaaaaaafirst'\n  Full diff:\n    (\n  -  '26aaaaaaaaaaaaaaaaaaafirst',\n  ?                            -\n  +  '26aaaaaaaaaaaaaaaaaaafirs',\n     '25aaaaaaaaaaaaaaaaaaalast',\n     '0',\n     'A-9@b.ru',\n     '9999999999',\n     'UPPERDEP',\n    )\n", "trace": "  File \"C:\\Users\\Ник\\PycharmProjects\\TestingUIForGit_POM\\tests\\elements_page_test.py\", line 91, in test_web_table_add_person\n    assert actual_person == expected_person, 'New person is not equal to the old person.'\n"}, "start": 1693431109047, "stop": 1693431109051}], "parameters": [{"name": "input_data", "value": "['26aaaaaaaaaaaaaaaaaaafirst', '25aaaaaaaaaaaaaaaaaaalast', 'A-9@b.ru', '0', '9999999999', 'UPPERDEP']"}], "start": 1693431108069, "stop": 1693431109051, "uuid": "2c7139cc-eaa1-4a0c-98e9-7ddccdcadf6d", "historyId": "fe71544424de797621c5bc29c8f36f69", "testCaseId": "977fa193c6f2735bd27203d4f1ee6b51", "fullName": "tests.elements_page_test.TestWebTables#test_web_table_add_person", "labels": [{"name": "feature", "value": "Web Tables page has a person's data list and functions add/edit/delete for it"}, {"name": "subSuite", "value": "Web Tables"}, {"name": "suite", "value": "Elements"}, {"name": "tag", "value": "@pytest.mark.xfail(True, reason='Negative data tests', run=True)"}, {"name": "tag", "value": "@pytest.mark.usefixtures('web_table_setup')"}, {"name": "parentSuite", "value": "tests"}, {"name": "host", "value": "Nick"}, {"name": "thread", "value": "7104-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.elements_page_test"}]}