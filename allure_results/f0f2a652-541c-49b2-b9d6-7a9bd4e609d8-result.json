{"name": "test_web_table_add_person[input_data272]", "status": "failed", "statusDetails": {"message": "AssertionError: New person is not equal to the old person.\nassert ('UPPERFIRST', '26aaaaaaaaaaaaaaaaaaafirs', '99', 'a@B_9.ru', '9999999999', 'dep') == ('UPPERFIRST', '26aaaaaaaaaaaaaaaaaaafirst', '99', 'a@B_9.ru', '9999999999', ' dep')\n  At index 1 diff: '26aaaaaaaaaaaaaaaaaaafirs' != '26aaaaaaaaaaaaaaaaaaafirst'\n  Full diff:\n    (\n     'UPPERFIRST',\n  -  '26aaaaaaaaaaaaaaaaaaafirst',\n  ?                            -\n  +  '26aaaaaaaaaaaaaaaaaaafirs',\n     '99',\n     'a@B_9.ru',\n     '9999999999',\n  -  ' dep',\n  ?   -\n  +  'dep',\n    )", "trace": "self = <elements_page_test.TestElements.TestWebTables object at 0x000000C3A832E410>\ninput_data = ['UPPERFIRST', '26aaaaaaaaaaaaaaaaaaafirst', 'a@B_9.ru', '99', '9999999999', ' dep']\n\n    def test_web_table_add_person(self, input_data):\n        \"\"\" Check if one new person could be added in the list \"\"\"\n        expected_person = self.web_table_page.create_specified_person(input_data)\n    \n        with allure.step('Check if form is closed'):\n            assert self.web_table_page.get_form_status_is_closed() == 1, \\\n                'Registration Form is not closed after submitting!'\n    \n        actual_person = self.web_table_page.get_last_person()\n    \n        with allure.step('Check data equality'):\n>           assert actual_person == expected_person, 'New person is not equal to the old person.'\nE           AssertionError: New person is not equal to the old person.\nE           assert ('UPPERFIRST', '26aaaaaaaaaaaaaaaaaaafirs', '99', 'a@B_9.ru', '9999999999', 'dep') == ('UPPERFIRST', '26aaaaaaaaaaaaaaaaaaafirst', '99', 'a@B_9.ru', '9999999999', ' dep')\nE             At index 1 diff: '26aaaaaaaaaaaaaaaaaaafirs' != '26aaaaaaaaaaaaaaaaaaafirst'\nE             Full diff:\nE               (\nE                'UPPERFIRST',\nE             -  '26aaaaaaaaaaaaaaaaaaafirst',\nE             ?                            -\nE             +  '26aaaaaaaaaaaaaaaaaaafirs',\nE                '99',\nE                'a@B_9.ru',\nE                '9999999999',\nE             -  ' dep',\nE             ?   -\nE             +  'dep',\nE               )\n\ntests\\elements_page_test.py:91: AssertionError"}, "description": " Check if one new person could be added in the list ", "steps": [{"name": "Create specified person", "status": "passed", "steps": [{"name": "\"Add\" click", "status": "passed", "start": 1693430900405, "stop": 1693430900697}, {"name": "Fill the form", "status": "passed", "start": 1693430900697, "stop": 1693430901025}, {"name": "\"Submit\" click", "status": "passed", "start": 1693430901025, "stop": 1693430901293}], "parameters": [{"name": "input_list", "value": "['UPPERFIRST', '26aaaaaaaaaaaaaaaaaaafirst', 'a@B_9.ru', '99', '9999999999', ' dep']"}], "start": 1693430900405, "stop": 1693430901293}, {"name": "Check if form is closed", "status": "passed", "steps": [{"name": "Get form status", "status": "passed", "start": 1693430901293, "stop": 1693430901297}], "start": 1693430901293, "stop": 1693430901297}, {"name": "Get last person", "status": "passed", "start": 1693430901297, "stop": 1693430901337}, {"name": "Check data equality", "status": "failed", "statusDetails": {"message": "AssertionError: New person is not equal to the old person.\nassert ('UPPERFIRST', '26aaaaaaaaaaaaaaaaaaafirs', '99', 'a@B_9.ru', '9999999999', 'dep') == ('UPPERFIRST', '26aaaaaaaaaaaaaaaaaaafirst', '99', 'a@B_9.ru', '9999999999', ' dep')\n  At index 1 diff: '26aaaaaaaaaaaaaaaaaaafirs' != '26aaaaaaaaaaaaaaaaaaafirst'\n  Full diff:\n    (\n     'UPPERFIRST',\n  -  '26aaaaaaaaaaaaaaaaaaafirst',\n  ?                            -\n  +  '26aaaaaaaaaaaaaaaaaaafirs',\n     '99',\n     'a@B_9.ru',\n     '9999999999',\n  -  ' dep',\n  ?   -\n  +  'dep',\n    )\n", "trace": "  File \"C:\\Users\\Ник\\PycharmProjects\\TestingUIForGit_POM\\tests\\elements_page_test.py\", line 91, in test_web_table_add_person\n    assert actual_person == expected_person, 'New person is not equal to the old person.'\n"}, "start": 1693430901337, "stop": 1693430901337}], "parameters": [{"name": "input_data", "value": "['UPPERFIRST', '26aaaaaaaaaaaaaaaaaaafirst', 'a@B_9.ru', '99', '9999999999', ' dep']"}], "start": 1693430900405, "stop": 1693430901337, "uuid": "dac50d0a-3d26-4858-b0e9-6bcdce00abcd", "historyId": "1b0c005e498b0465e875a2e51d717068", "testCaseId": "977fa193c6f2735bd27203d4f1ee6b51", "fullName": "tests.elements_page_test.TestWebTables#test_web_table_add_person", "labels": [{"name": "feature", "value": "Web Tables page has a person's data list and functions add/edit/delete for it"}, {"name": "subSuite", "value": "Web Tables"}, {"name": "suite", "value": "Elements"}, {"name": "tag", "value": "@pytest.mark.xfail(False, reason='Negative data tests', run=True)"}, {"name": "tag", "value": "@pytest.mark.usefixtures('web_table_setup')"}, {"name": "parentSuite", "value": "tests"}, {"name": "host", "value": "Nick"}, {"name": "thread", "value": "7104-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.elements_page_test"}]}