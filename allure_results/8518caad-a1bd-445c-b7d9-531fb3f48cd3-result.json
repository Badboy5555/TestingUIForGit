{"name": "test_web_table_add_person[input_data341]", "status": "failed", "statusDetails": {"message": "AssertionError: New person is not equal to the old person.\nassert ('lowerfirst', '26aaaaaaaaaaaaaaaaaaafirs', '99', 'a@B_9.ru', '9999999999', 'a') == ('lowerfirst', '26aaaaaaaaaaaaaaaaaaafirst', '99', 'a@B_9.ru', '9999999999', 'a')\n  At index 1 diff: '26aaaaaaaaaaaaaaaaaaafirs' != '26aaaaaaaaaaaaaaaaaaafirst'\n  Full diff:\n    (\n     'lowerfirst',\n  -  '26aaaaaaaaaaaaaaaaaaafirst',\n  ?                            -\n  +  '26aaaaaaaaaaaaaaaaaaafirs',\n     '99',\n     'a@B_9.ru',\n     '9999999999',\n     'a',\n    )", "trace": "self = <elements_page_test.TestElements.TestWebTables object at 0x000000C3A8354550>\ninput_data = ['lowerfirst', '26aaaaaaaaaaaaaaaaaaafirst', 'a@B_9.ru', '99', '9999999999', 'a']\n\n    def test_web_table_add_person(self, input_data):\n        \"\"\" Check if one new person could be added in the list \"\"\"\n        expected_person = self.web_table_page.create_specified_person(input_data)\n    \n        with allure.step('Check if form is closed'):\n            assert self.web_table_page.get_form_status_is_closed() == 1, \\\n                'Registration Form is not closed after submitting!'\n    \n        actual_person = self.web_table_page.get_last_person()\n    \n        with allure.step('Check data equality'):\n>           assert actual_person == expected_person, 'New person is not equal to the old person.'\nE           AssertionError: New person is not equal to the old person.\nE           assert ('lowerfirst', '26aaaaaaaaaaaaaaaaaaafirs', '99', 'a@B_9.ru', '9999999999', 'a') == ('lowerfirst', '26aaaaaaaaaaaaaaaaaaafirst', '99', 'a@B_9.ru', '9999999999', 'a')\nE             At index 1 diff: '26aaaaaaaaaaaaaaaaaaafirs' != '26aaaaaaaaaaaaaaaaaaafirst'\nE             Full diff:\nE               (\nE                'lowerfirst',\nE             -  '26aaaaaaaaaaaaaaaaaaafirst',\nE             ?                            -\nE             +  '26aaaaaaaaaaaaaaaaaaafirs',\nE                '99',\nE                'a@B_9.ru',\nE                '9999999999',\nE                'a',\nE               )\n\ntests\\elements_page_test.py:91: AssertionError"}, "description": " Check if one new person could be added in the list ", "steps": [{"name": "Create specified person", "status": "passed", "steps": [{"name": "\"Add\" click", "status": "passed", "start": 1693431023247, "stop": 1693431023539}, {"name": "Fill the form", "status": "passed", "start": 1693431023539, "stop": 1693431023875}, {"name": "\"Submit\" click", "status": "passed", "start": 1693431023875, "stop": 1693431024131}], "parameters": [{"name": "input_list", "value": "['lowerfirst', '26aaaaaaaaaaaaaaaaaaafirst', 'a@B_9.ru', '99', '9999999999', 'a']"}], "start": 1693431023247, "stop": 1693431024131}, {"name": "Check if form is closed", "status": "passed", "steps": [{"name": "Get form status", "status": "passed", "start": 1693431024131, "stop": 1693431024139}], "start": 1693431024131, "stop": 1693431024139}, {"name": "Get last person", "status": "passed", "start": 1693431024139, "stop": 1693431024191}, {"name": "Check data equality", "status": "failed", "statusDetails": {"message": "AssertionError: New person is not equal to the old person.\nassert ('lowerfirst', '26aaaaaaaaaaaaaaaaaaafirs', '99', 'a@B_9.ru', '9999999999', 'a') == ('lowerfirst', '26aaaaaaaaaaaaaaaaaaafirst', '99', 'a@B_9.ru', '9999999999', 'a')\n  At index 1 diff: '26aaaaaaaaaaaaaaaaaaafirs' != '26aaaaaaaaaaaaaaaaaaafirst'\n  Full diff:\n    (\n     'lowerfirst',\n  -  '26aaaaaaaaaaaaaaaaaaafirst',\n  ?                            -\n  +  '26aaaaaaaaaaaaaaaaaaafirs',\n     '99',\n     'a@B_9.ru',\n     '9999999999',\n     'a',\n    )\n", "trace": "  File \"C:\\Users\\Ник\\PycharmProjects\\TestingUIForGit_POM\\tests\\elements_page_test.py\", line 91, in test_web_table_add_person\n    assert actual_person == expected_person, 'New person is not equal to the old person.'\n"}, "start": 1693431024191, "stop": 1693431024191}], "parameters": [{"name": "input_data", "value": "['lowerfirst', '26aaaaaaaaaaaaaaaaaaafirst', 'a@B_9.ru', '99', '9999999999', 'a']"}], "start": 1693431023247, "stop": 1693431024195, "uuid": "4547ddb6-1d93-4e58-9ad7-fd2c7658bdf7", "historyId": "0b213f1eecbfb5b32b908862a12f49be", "testCaseId": "977fa193c6f2735bd27203d4f1ee6b51", "fullName": "tests.elements_page_test.TestWebTables#test_web_table_add_person", "labels": [{"name": "feature", "value": "Web Tables page has a person's data list and functions add/edit/delete for it"}, {"name": "subSuite", "value": "Web Tables"}, {"name": "suite", "value": "Elements"}, {"name": "tag", "value": "@pytest.mark.xfail(False, reason='Negative data tests', run=True)"}, {"name": "tag", "value": "@pytest.mark.usefixtures('web_table_setup')"}, {"name": "parentSuite", "value": "tests"}, {"name": "host", "value": "Nick"}, {"name": "thread", "value": "7104-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.elements_page_test"}]}