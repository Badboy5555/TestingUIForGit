{"name": "test_web_table_add_person[input_data302]", "status": "skipped", "statusDetails": {"message": "XFAIL Negative data tests\n\nAssertionError: New person is not equal to the old person.\nassert ('mIxfirst', 'MiXlast', '0', 'A-9@b.ru', '0', '26aaaaaaaaaaaaaaaaaaafirs') == ('mIxfirst', 'MiXlast', '0', 'A-9@b.ru', '0', '26aaaaaaaaaaaaaaaaaaafirst')\n  At index 5 diff: '26aaaaaaaaaaaaaaaaaaafirs' != '26aaaaaaaaaaaaaaaaaaafirst'\n  Full diff:\n  - ('mIxfirst', 'MiXlast', '0', 'A-9@b.ru', '0', '26aaaaaaaaaaaaaaaaaaafirst')\n  ?                                                                         -\n  + ('mIxfirst', 'MiXlast', '0', 'A-9@b.ru', '0', '26aaaaaaaaaaaaaaaaaaafirs')", "trace": "self = <elements_page_test.TestElements.TestWebTables object at 0x000000C3A8340610>\ninput_data = ['mIxfirst', 'MiXlast', 'A-9@b.ru', '0', '0', '26aaaaaaaaaaaaaaaaaaafirst']\n\n    def test_web_table_add_person(self, input_data):\n        \"\"\" Check if one new person could be added in the list \"\"\"\n        expected_person = self.web_table_page.create_specified_person(input_data)\n    \n        with allure.step('Check if form is closed'):\n            assert self.web_table_page.get_form_status_is_closed() == 1, \\\n                'Registration Form is not closed after submitting!'\n    \n        actual_person = self.web_table_page.get_last_person()\n    \n        with allure.step('Check data equality'):\n>           assert actual_person == expected_person, 'New person is not equal to the old person.'\nE           AssertionError: New person is not equal to the old person.\nE           assert ('mIxfirst', 'MiXlast', '0', 'A-9@b.ru', '0', '26aaaaaaaaaaaaaaaaaaafirs') == ('mIxfirst', 'MiXlast', '0', 'A-9@b.ru', '0', '26aaaaaaaaaaaaaaaaaaafirst')\nE             At index 5 diff: '26aaaaaaaaaaaaaaaaaaafirs' != '26aaaaaaaaaaaaaaaaaaafirst'\nE             Full diff:\nE             - ('mIxfirst', 'MiXlast', '0', 'A-9@b.ru', '0', '26aaaaaaaaaaaaaaaaaaafirst')\nE             ?                                                                         -\nE             + ('mIxfirst', 'MiXlast', '0', 'A-9@b.ru', '0', '26aaaaaaaaaaaaaaaaaaafirs')\n\ntests\\elements_page_test.py:91: AssertionError"}, "description": " Check if one new person could be added in the list ", "steps": [{"name": "Create specified person", "status": "passed", "steps": [{"name": "\"Add\" click", "status": "passed", "start": 1693430953337, "stop": 1693430953626}, {"name": "Fill the form", "status": "passed", "start": 1693430953626, "stop": 1693430953946}, {"name": "\"Submit\" click", "status": "passed", "start": 1693430953946, "stop": 1693430954214}], "parameters": [{"name": "input_list", "value": "['mIxfirst', 'MiXlast', 'A-9@b.ru', '0', '0', '26aaaaaaaaaaaaaaaaaaafirst']"}], "start": 1693430953337, "stop": 1693430954214}, {"name": "Check if form is closed", "status": "passed", "steps": [{"name": "Get form status", "status": "passed", "start": 1693430954214, "stop": 1693430954222}], "start": 1693430954214, "stop": 1693430954222}, {"name": "Get last person", "status": "passed", "start": 1693430954222, "stop": 1693430954302}, {"name": "Check data equality", "status": "failed", "statusDetails": {"message": "AssertionError: New person is not equal to the old person.\nassert ('mIxfirst', 'MiXlast', '0', 'A-9@b.ru', '0', '26aaaaaaaaaaaaaaaaaaafirs') == ('mIxfirst', 'MiXlast', '0', 'A-9@b.ru', '0', '26aaaaaaaaaaaaaaaaaaafirst')\n  At index 5 diff: '26aaaaaaaaaaaaaaaaaaafirs' != '26aaaaaaaaaaaaaaaaaaafirst'\n  Full diff:\n  - ('mIxfirst', 'MiXlast', '0', 'A-9@b.ru', '0', '26aaaaaaaaaaaaaaaaaaafirst')\n  ?                                                                         -\n  + ('mIxfirst', 'MiXlast', '0', 'A-9@b.ru', '0', '26aaaaaaaaaaaaaaaaaaafirs')\n", "trace": "  File \"C:\\Users\\Ник\\PycharmProjects\\TestingUIForGit_POM\\tests\\elements_page_test.py\", line 91, in test_web_table_add_person\n    assert actual_person == expected_person, 'New person is not equal to the old person.'\n"}, "start": 1693430954302, "stop": 1693430954302}], "parameters": [{"name": "input_data", "value": "['mIxfirst', 'MiXlast', 'A-9@b.ru', '0', '0', '26aaaaaaaaaaaaaaaaaaafirst']"}], "start": 1693430953337, "stop": 1693430954302, "uuid": "c668237b-8516-4e32-82f5-d4efd69da611", "historyId": "f12f2b617b5bf3600b4c2ec4325fc6f2", "testCaseId": "977fa193c6f2735bd27203d4f1ee6b51", "fullName": "tests.elements_page_test.TestWebTables#test_web_table_add_person", "labels": [{"name": "feature", "value": "Web Tables page has a person's data list and functions add/edit/delete for it"}, {"name": "subSuite", "value": "Web Tables"}, {"name": "suite", "value": "Elements"}, {"name": "tag", "value": "@pytest.mark.xfail(True, reason='Negative data tests', run=True)"}, {"name": "tag", "value": "@pytest.mark.usefixtures('web_table_setup')"}, {"name": "parentSuite", "value": "tests"}, {"name": "host", "value": "Nick"}, {"name": "thread", "value": "7104-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.elements_page_test"}]}