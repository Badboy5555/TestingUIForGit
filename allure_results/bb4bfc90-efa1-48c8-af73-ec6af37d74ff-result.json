{"name": "test_web_table_add_person[input_data235]", "status": "skipped", "statusDetails": {"message": "XFAIL Negative data tests\n\nAssertionError: New person is not equal to the old person.\nassert ('26aaaaaaaaaaaaaaaaaaafirs', 'UPPERLAST', '0', 'A-9@b.ru', '9999999999', '') == ('26aaaaaaaaaaaaaaaaaaafirst', 'UPPERLAST', '0', 'A-9@b.ru', '9999999999', ' ')\n  At index 0 diff: '26aaaaaaaaaaaaaaaaaaafirs' != '26aaaaaaaaaaaaaaaaaaafirst'\n  Full diff:\n  - ('26aaaaaaaaaaaaaaaaaaafirst', 'UPPERLAST', '0', 'A-9@b.ru', '9999999999', ' ')\n  ?                            -                                                -\n  + ('26aaaaaaaaaaaaaaaaaaafirs', 'UPPERLAST', '0', 'A-9@b.ru', '9999999999', '')", "trace": "self = <elements_page_test.TestElements.TestWebTables object at 0x000000C3A831EB50>\ninput_data = ['26aaaaaaaaaaaaaaaaaaafirst', 'UPPERLAST', 'A-9@b.ru', '0', '9999999999', ' ']\n\n    def test_web_table_add_person(self, input_data):\n        \"\"\" Check if one new person could be added in the list \"\"\"\n        expected_person = self.web_table_page.create_specified_person(input_data)\n    \n        with allure.step('Check if form is closed'):\n            assert self.web_table_page.get_form_status_is_closed() == 1, \\\n                'Registration Form is not closed after submitting!'\n    \n        actual_person = self.web_table_page.get_last_person()\n    \n        with allure.step('Check data equality'):\n>           assert actual_person == expected_person, 'New person is not equal to the old person.'\nE           AssertionError: New person is not equal to the old person.\nE           assert ('26aaaaaaaaaaaaaaaaaaafirs', 'UPPERLAST', '0', 'A-9@b.ru', '9999999999', '') == ('26aaaaaaaaaaaaaaaaaaafirst', 'UPPERLAST', '0', 'A-9@b.ru', '9999999999', ' ')\nE             At index 0 diff: '26aaaaaaaaaaaaaaaaaaafirs' != '26aaaaaaaaaaaaaaaaaaafirst'\nE             Full diff:\nE             - ('26aaaaaaaaaaaaaaaaaaafirst', 'UPPERLAST', '0', 'A-9@b.ru', '9999999999', ' ')\nE             ?                            -                                                -\nE             + ('26aaaaaaaaaaaaaaaaaaafirs', 'UPPERLAST', '0', 'A-9@b.ru', '9999999999', '')\n\ntests\\elements_page_test.py:91: AssertionError"}, "description": " Check if one new person could be added in the list ", "steps": [{"name": "Create specified person", "status": "passed", "steps": [{"name": "\"Add\" click", "status": "passed", "start": 1693430837203, "stop": 1693430837495}, {"name": "Fill the form", "status": "passed", "start": 1693430837495, "stop": 1693430837851}, {"name": "\"Submit\" click", "status": "passed", "start": 1693430837851, "stop": 1693430838107}], "parameters": [{"name": "input_list", "value": "['26aaaaaaaaaaaaaaaaaaafirst', 'UPPERLAST', 'A-9@b.ru', '0', '9999999999', ' ']"}], "start": 1693430837203, "stop": 1693430838107}, {"name": "Check if form is closed", "status": "passed", "steps": [{"name": "Get form status", "status": "passed", "start": 1693430838107, "stop": 1693430838115}], "start": 1693430838107, "stop": 1693430838115}, {"name": "Get last person", "status": "passed", "start": 1693430838115, "stop": 1693430838187}, {"name": "Check data equality", "status": "failed", "statusDetails": {"message": "AssertionError: New person is not equal to the old person.\nassert ('26aaaaaaaaaaaaaaaaaaafirs', 'UPPERLAST', '0', 'A-9@b.ru', '9999999999', '') == ('26aaaaaaaaaaaaaaaaaaafirst', 'UPPERLAST', '0', 'A-9@b.ru', '9999999999', ' ')\n  At index 0 diff: '26aaaaaaaaaaaaaaaaaaafirs' != '26aaaaaaaaaaaaaaaaaaafirst'\n  Full diff:\n  - ('26aaaaaaaaaaaaaaaaaaafirst', 'UPPERLAST', '0', 'A-9@b.ru', '9999999999', ' ')\n  ?                            -                                                -\n  + ('26aaaaaaaaaaaaaaaaaaafirs', 'UPPERLAST', '0', 'A-9@b.ru', '9999999999', '')\n", "trace": "  File \"C:\\Users\\Ник\\PycharmProjects\\TestingUIForGit_POM\\tests\\elements_page_test.py\", line 91, in test_web_table_add_person\n    assert actual_person == expected_person, 'New person is not equal to the old person.'\n"}, "start": 1693430838187, "stop": 1693430838187}], "parameters": [{"name": "input_data", "value": "['26aaaaaaaaaaaaaaaaaaafirst', 'UPPERLAST', 'A-9@b.ru', '0', '9999999999', ' ']"}], "start": 1693430837203, "stop": 1693430838187, "uuid": "d25626be-233b-4609-bd8a-25f3621fea4a", "historyId": "8fbe157aa1ad2cefd32f0005aa5f94a1", "testCaseId": "977fa193c6f2735bd27203d4f1ee6b51", "fullName": "tests.elements_page_test.TestWebTables#test_web_table_add_person", "labels": [{"name": "feature", "value": "Web Tables page has a person's data list and functions add/edit/delete for it"}, {"name": "subSuite", "value": "Web Tables"}, {"name": "suite", "value": "Elements"}, {"name": "tag", "value": "@pytest.mark.xfail(True, reason='Negative data tests', run=True)"}, {"name": "tag", "value": "@pytest.mark.usefixtures('web_table_setup')"}, {"name": "parentSuite", "value": "tests"}, {"name": "host", "value": "Nick"}, {"name": "thread", "value": "7104-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.elements_page_test"}]}