{"uid":"f97bcd5cb4f9ae4c","name":"test_web_table_add_person[input_data172]","fullName":"tests.elements_page_test.TestWebTables#test_web_table_add_person","historyId":"cd32897bed935ed035b7d2f62d0d3f49","time":{"start":1693430728981,"stop":1693430730033,"duration":1052},"description":" Check if one new person could be added in the list ","descriptionHtml":"<p>Check if one new person could be added in the list</p>\n","status":"failed","statusMessage":"AssertionError: New person is not equal to the old person.\nassert ('25aaaaaaaaaaaaaaaaaafirst', '26aaaaaaaaaaaaaaaaaaafirs', '99', 'A-9@b.ru', '0', 'UPPERDEP') == ('25aaaaaaaaaaaaaaaaaafirst', '26aaaaaaaaaaaaaaaaaaafirst', '99', 'A-9@b.ru', '0', 'UPPERDEP')\n  At index 1 diff: '26aaaaaaaaaaaaaaaaaaafirs' != '26aaaaaaaaaaaaaaaaaaafirst'\n  Full diff:\n    (\n     '25aaaaaaaaaaaaaaaaaafirst',\n  -  '26aaaaaaaaaaaaaaaaaaafirst',\n  ?                            -\n  +  '26aaaaaaaaaaaaaaaaaaafirs',\n     '99',\n     'A-9@b.ru',\n     '0',\n     'UPPERDEP',\n    )","statusTrace":"self = <elements_page_test.TestElements.TestWebTables object at 0x000000C3A8301DD0>\ninput_data = ['25aaaaaaaaaaaaaaaaaafirst', '26aaaaaaaaaaaaaaaaaaafirst', 'A-9@b.ru', '99', '0', 'UPPERDEP']\n\n    def test_web_table_add_person(self, input_data):\n        \"\"\" Check if one new person could be added in the list \"\"\"\n        expected_person = self.web_table_page.create_specified_person(input_data)\n    \n        with allure.step('Check if form is closed'):\n            assert self.web_table_page.get_form_status_is_closed() == 1, \\\n                'Registration Form is not closed after submitting!'\n    \n        actual_person = self.web_table_page.get_last_person()\n    \n        with allure.step('Check data equality'):\n>           assert actual_person == expected_person, 'New person is not equal to the old person.'\nE           AssertionError: New person is not equal to the old person.\nE           assert ('25aaaaaaaaaaaaaaaaaafirst', '26aaaaaaaaaaaaaaaaaaafirs', '99', 'A-9@b.ru', '0', 'UPPERDEP') == ('25aaaaaaaaaaaaaaaaaafirst', '26aaaaaaaaaaaaaaaaaaafirst', '99', 'A-9@b.ru', '0', 'UPPERDEP')\nE             At index 1 diff: '26aaaaaaaaaaaaaaaaaaafirs' != '26aaaaaaaaaaaaaaaaaaafirst'\nE             Full diff:\nE               (\nE                '25aaaaaaaaaaaaaaaaaafirst',\nE             -  '26aaaaaaaaaaaaaaaaaaafirst',\nE             ?                            -\nE             +  '26aaaaaaaaaaaaaaaaaaafirs',\nE                '99',\nE                'A-9@b.ru',\nE                '0',\nE                'UPPERDEP',\nE               )\n\ntests\\elements_page_test.py:91: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1693430445726,"stop":1693430445820,"duration":94},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0},{"name":"driver","time":{"start":1693430468302,"stop":1693430474075,"duration":5773},"status":"passed","steps":[{"name":"Start Firefox engine","time":{"start":1693430468302,"stop":1693430474075,"duration":5773},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"stepsCount":1},{"name":"web_table_setup","time":{"start":1693430728729,"stop":1693430728981,"duration":252},"status":"passed","steps":[{"name":"Setup WebTablesPage object and open its url","time":{"start":1693430728729,"stop":1693430728981,"duration":252},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"stepsCount":1},{"name":"screenshot_on_failure","time":{"start":1693430728729,"stop":1693430728729,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0}],"testStage":{"description":" Check if one new person could be added in the list ","status":"failed","statusMessage":"AssertionError: New person is not equal to the old person.\nassert ('25aaaaaaaaaaaaaaaaaafirst', '26aaaaaaaaaaaaaaaaaaafirs', '99', 'A-9@b.ru', '0', 'UPPERDEP') == ('25aaaaaaaaaaaaaaaaaafirst', '26aaaaaaaaaaaaaaaaaaafirst', '99', 'A-9@b.ru', '0', 'UPPERDEP')\n  At index 1 diff: '26aaaaaaaaaaaaaaaaaaafirs' != '26aaaaaaaaaaaaaaaaaaafirst'\n  Full diff:\n    (\n     '25aaaaaaaaaaaaaaaaaafirst',\n  -  '26aaaaaaaaaaaaaaaaaaafirst',\n  ?                            -\n  +  '26aaaaaaaaaaaaaaaaaaafirs',\n     '99',\n     'A-9@b.ru',\n     '0',\n     'UPPERDEP',\n    )","statusTrace":"self = <elements_page_test.TestElements.TestWebTables object at 0x000000C3A8301DD0>\ninput_data = ['25aaaaaaaaaaaaaaaaaafirst', '26aaaaaaaaaaaaaaaaaaafirst', 'A-9@b.ru', '99', '0', 'UPPERDEP']\n\n    def test_web_table_add_person(self, input_data):\n        \"\"\" Check if one new person could be added in the list \"\"\"\n        expected_person = self.web_table_page.create_specified_person(input_data)\n    \n        with allure.step('Check if form is closed'):\n            assert self.web_table_page.get_form_status_is_closed() == 1, \\\n                'Registration Form is not closed after submitting!'\n    \n        actual_person = self.web_table_page.get_last_person()\n    \n        with allure.step('Check data equality'):\n>           assert actual_person == expected_person, 'New person is not equal to the old person.'\nE           AssertionError: New person is not equal to the old person.\nE           assert ('25aaaaaaaaaaaaaaaaaafirst', '26aaaaaaaaaaaaaaaaaaafirs', '99', 'A-9@b.ru', '0', 'UPPERDEP') == ('25aaaaaaaaaaaaaaaaaafirst', '26aaaaaaaaaaaaaaaaaaafirst', '99', 'A-9@b.ru', '0', 'UPPERDEP')\nE             At index 1 diff: '26aaaaaaaaaaaaaaaaaaafirs' != '26aaaaaaaaaaaaaaaaaaafirst'\nE             Full diff:\nE               (\nE                '25aaaaaaaaaaaaaaaaaafirst',\nE             -  '26aaaaaaaaaaaaaaaaaaafirst',\nE             ?                            -\nE             +  '26aaaaaaaaaaaaaaaaaaafirs',\nE                '99',\nE                'A-9@b.ru',\nE                '0',\nE                'UPPERDEP',\nE               )\n\ntests\\elements_page_test.py:91: AssertionError","steps":[{"name":"Create specified person","time":{"start":1693430728981,"stop":1693430729941,"duration":960},"status":"passed","steps":[{"name":"\"Add\" click","time":{"start":1693430728981,"stop":1693430729277,"duration":296},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0},{"name":"Fill the form","time":{"start":1693430729277,"stop":1693430729677,"duration":400},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0},{"name":"\"Submit\" click","time":{"start":1693430729677,"stop":1693430729941,"duration":264},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0}],"attachments":[],"parameters":[{"name":"input_list","value":"['25aaaaaaaaaaaaaaaaaafirst', '26aaaaaaaaaaaaaaaaaaafirst', 'A-9@b.ru', '99', '0', 'UPPERDEP']"}],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"stepsCount":3},{"name":"Check if form is closed","time":{"start":1693430729941,"stop":1693430729949,"duration":8},"status":"passed","steps":[{"name":"Get form status","time":{"start":1693430729941,"stop":1693430729949,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"stepsCount":1},{"name":"Get last person","time":{"start":1693430729949,"stop":1693430730029,"duration":80},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0},{"name":"Check data equality","time":{"start":1693430730029,"stop":1693430730029,"duration":0},"status":"failed","statusMessage":"AssertionError: New person is not equal to the old person.\nassert ('25aaaaaaaaaaaaaaaaaafirst', '26aaaaaaaaaaaaaaaaaaafirs', '99', 'A-9@b.ru', '0', 'UPPERDEP') == ('25aaaaaaaaaaaaaaaaaafirst', '26aaaaaaaaaaaaaaaaaaafirst', '99', 'A-9@b.ru', '0', 'UPPERDEP')\n  At index 1 diff: '26aaaaaaaaaaaaaaaaaaafirs' != '26aaaaaaaaaaaaaaaaaaafirst'\n  Full diff:\n    (\n     '25aaaaaaaaaaaaaaaaaafirst',\n  -  '26aaaaaaaaaaaaaaaaaaafirst',\n  ?                            -\n  +  '26aaaaaaaaaaaaaaaaaaafirs',\n     '99',\n     'A-9@b.ru',\n     '0',\n     'UPPERDEP',\n    )\n","statusTrace":"  File \"C:\\Users\\Ник\\PycharmProjects\\TestingUIForGit_POM\\tests\\elements_page_test.py\", line 91, in test_web_table_add_person\n    assert actual_person == expected_person, 'New person is not equal to the old person.'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"stepsCount":0}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"stepsCount":8},"afterStages":[{"name":"screenshot_on_failure::0","time":{"start":1693430730053,"stop":1693430730201,"duration":148},"status":"passed","steps":[],"attachments":[{"uid":"b481d309391a9a81","name":"test_web_table_add_person[input_data172]-2023-08-31-00-25-30.053261","source":"b481d309391a9a81.png","type":"image/png","size":253138}],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":1,"hasContent":true,"stepsCount":0},{"name":"driver::0","time":{"start":1693431164077,"stop":1693431165754,"duration":1677},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0}],"labels":[{"name":"feature","value":"Web Tables page has a person's data list and functions add/edit/delete for it"},{"name":"subSuite","value":"Web Tables"},{"name":"suite","value":"Elements"},{"name":"tag","value":"@pytest.mark.xfail(False, reason='Negative data tests', run=True)"},{"name":"tag","value":"@pytest.mark.usefixtures('web_table_setup')"},{"name":"parentSuite","value":"tests"},{"name":"host","value":"Nick"},{"name":"thread","value":"7104-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.elements_page_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"input_data","value":"['25aaaaaaaaaaaaaaaaaafirst', '26aaaaaaaaaaaaaaaaaaafirst', 'A-9@b.ru', '99', '0', 'UPPERDEP']"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["@pytest.mark.usefixtures('web_table_setup')","@pytest.mark.xfail(False, reason='Negative data tests', run=True)"]},"source":"f97bcd5cb4f9ae4c.json","parameterValues":["['25aaaaaaaaaaaaaaaaaafirst', '26aaaaaaaaaaaaaaaaaaafirst', 'A-9@b.ru', '99', '0', 'UPPERDEP']"]}