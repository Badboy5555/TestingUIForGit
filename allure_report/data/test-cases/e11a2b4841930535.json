{"uid":"e11a2b4841930535","name":"test_web_table_add_person[input_data54]","fullName":"tests.elements_page_test.TestWebTables#test_web_table_add_person","historyId":"ec0f26fb9c24e8aa68080f0d7edaefca","time":{"start":1693430556579,"stop":1693430557449,"duration":870},"description":" Check if one new person could be added in the list ","descriptionHtml":"<p>Check if one new person could be added in the list</p>\n","status":"failed","statusMessage":"AssertionError: New person is not equal to the old person.\nassert ('nick', 'lowerlast', '0', 'a@B_9.ru', '9999999999', 'a') == ('nick ', 'lowerlast', '0', 'a@B_9.ru', '9999999999', 'a')\n  At index 0 diff: 'nick' != 'nick '\n  Full diff:\n  - ('nick ', 'lowerlast', '0', 'a@B_9.ru', '9999999999', 'a')\n  ?       -\n  + ('nick', 'lowerlast', '0', 'a@B_9.ru', '9999999999', 'a')","statusTrace":"self = <elements_page_test.TestElements.TestWebTables object at 0x000000C3A82C9CD0>, input_data = ['nick ', 'lowerlast', 'a@B_9.ru', '0', '9999999999', 'a']\n\n    def test_web_table_add_person(self, input_data):\n        \"\"\" Check if one new person could be added in the list \"\"\"\n        expected_person = self.web_table_page.create_specified_person(input_data)\n    \n        with allure.step('Check if form is closed'):\n            assert self.web_table_page.get_form_status_is_closed() == 1, \\\n                'Registration Form is not closed after submitting!'\n    \n        actual_person = self.web_table_page.get_last_person()\n    \n        with allure.step('Check data equality'):\n>           assert actual_person == expected_person, 'New person is not equal to the old person.'\nE           AssertionError: New person is not equal to the old person.\nE           assert ('nick', 'lowerlast', '0', 'a@B_9.ru', '9999999999', 'a') == ('nick ', 'lowerlast', '0', 'a@B_9.ru', '9999999999', 'a')\nE             At index 0 diff: 'nick' != 'nick '\nE             Full diff:\nE             - ('nick ', 'lowerlast', '0', 'a@B_9.ru', '9999999999', 'a')\nE             ?       -\nE             + ('nick', 'lowerlast', '0', 'a@B_9.ru', '9999999999', 'a')\n\ntests\\elements_page_test.py:91: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1693430445726,"stop":1693430445820,"duration":94},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0},{"name":"driver","time":{"start":1693430468302,"stop":1693430474075,"duration":5773},"status":"passed","steps":[{"name":"Start Firefox engine","time":{"start":1693430468302,"stop":1693430474075,"duration":5773},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"stepsCount":1},{"name":"screenshot_on_failure","time":{"start":1693430556330,"stop":1693430556330,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0},{"name":"web_table_setup","time":{"start":1693430556330,"stop":1693430556578,"duration":248},"status":"passed","steps":[{"name":"Setup WebTablesPage object and open its url","time":{"start":1693430556330,"stop":1693430556578,"duration":248},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"stepsCount":1}],"testStage":{"description":" Check if one new person could be added in the list ","status":"failed","statusMessage":"AssertionError: New person is not equal to the old person.\nassert ('nick', 'lowerlast', '0', 'a@B_9.ru', '9999999999', 'a') == ('nick ', 'lowerlast', '0', 'a@B_9.ru', '9999999999', 'a')\n  At index 0 diff: 'nick' != 'nick '\n  Full diff:\n  - ('nick ', 'lowerlast', '0', 'a@B_9.ru', '9999999999', 'a')\n  ?       -\n  + ('nick', 'lowerlast', '0', 'a@B_9.ru', '9999999999', 'a')","statusTrace":"self = <elements_page_test.TestElements.TestWebTables object at 0x000000C3A82C9CD0>, input_data = ['nick ', 'lowerlast', 'a@B_9.ru', '0', '9999999999', 'a']\n\n    def test_web_table_add_person(self, input_data):\n        \"\"\" Check if one new person could be added in the list \"\"\"\n        expected_person = self.web_table_page.create_specified_person(input_data)\n    \n        with allure.step('Check if form is closed'):\n            assert self.web_table_page.get_form_status_is_closed() == 1, \\\n                'Registration Form is not closed after submitting!'\n    \n        actual_person = self.web_table_page.get_last_person()\n    \n        with allure.step('Check data equality'):\n>           assert actual_person == expected_person, 'New person is not equal to the old person.'\nE           AssertionError: New person is not equal to the old person.\nE           assert ('nick', 'lowerlast', '0', 'a@B_9.ru', '9999999999', 'a') == ('nick ', 'lowerlast', '0', 'a@B_9.ru', '9999999999', 'a')\nE             At index 0 diff: 'nick' != 'nick '\nE             Full diff:\nE             - ('nick ', 'lowerlast', '0', 'a@B_9.ru', '9999999999', 'a')\nE             ?       -\nE             + ('nick', 'lowerlast', '0', 'a@B_9.ru', '9999999999', 'a')\n\ntests\\elements_page_test.py:91: AssertionError","steps":[{"name":"Create specified person","time":{"start":1693430556579,"stop":1693430557409,"duration":830},"status":"passed","steps":[{"name":"\"Add\" click","time":{"start":1693430556579,"stop":1693430556878,"duration":299},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0},{"name":"Fill the form","time":{"start":1693430556878,"stop":1693430557150,"duration":272},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0},{"name":"\"Submit\" click","time":{"start":1693430557150,"stop":1693430557409,"duration":259},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0}],"attachments":[],"parameters":[{"name":"input_list","value":"['nick ', 'lowerlast', 'a@B_9.ru', '0', '9999999999', 'a']"}],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"stepsCount":3},{"name":"Check if form is closed","time":{"start":1693430557409,"stop":1693430557412,"duration":3},"status":"passed","steps":[{"name":"Get form status","time":{"start":1693430557409,"stop":1693430557412,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"stepsCount":1},{"name":"Get last person","time":{"start":1693430557412,"stop":1693430557448,"duration":36},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0},{"name":"Check data equality","time":{"start":1693430557448,"stop":1693430557448,"duration":0},"status":"failed","statusMessage":"AssertionError: New person is not equal to the old person.\nassert ('nick', 'lowerlast', '0', 'a@B_9.ru', '9999999999', 'a') == ('nick ', 'lowerlast', '0', 'a@B_9.ru', '9999999999', 'a')\n  At index 0 diff: 'nick' != 'nick '\n  Full diff:\n  - ('nick ', 'lowerlast', '0', 'a@B_9.ru', '9999999999', 'a')\n  ?       -\n  + ('nick', 'lowerlast', '0', 'a@B_9.ru', '9999999999', 'a')\n","statusTrace":"  File \"C:\\Users\\Ник\\PycharmProjects\\TestingUIForGit_POM\\tests\\elements_page_test.py\", line 91, in test_web_table_add_person\n    assert actual_person == expected_person, 'New person is not equal to the old person.'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"stepsCount":0}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"stepsCount":8},"afterStages":[{"name":"screenshot_on_failure::0","time":{"start":1693430557463,"stop":1693430557605,"duration":142},"status":"passed","steps":[],"attachments":[{"uid":"60fc751a378aaa0d","name":"test_web_table_add_person[input_data54]-2023-08-31-00-22-37.462691","source":"60fc751a378aaa0d.png","type":"image/png","size":252613}],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":1,"hasContent":true,"stepsCount":0},{"name":"driver::0","time":{"start":1693431164077,"stop":1693431165754,"duration":1677},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0}],"labels":[{"name":"feature","value":"Web Tables page has a person's data list and functions add/edit/delete for it"},{"name":"subSuite","value":"Web Tables"},{"name":"suite","value":"Elements"},{"name":"tag","value":"@pytest.mark.xfail(False, reason='Negative data tests', run=True)"},{"name":"tag","value":"@pytest.mark.usefixtures('web_table_setup')"},{"name":"parentSuite","value":"tests"},{"name":"host","value":"Nick"},{"name":"thread","value":"7104-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.elements_page_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"input_data","value":"['nick ', 'lowerlast', 'a@B_9.ru', '0', '9999999999', 'a']"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["@pytest.mark.usefixtures('web_table_setup')","@pytest.mark.xfail(False, reason='Negative data tests', run=True)"]},"source":"e11a2b4841930535.json","parameterValues":["['nick ', 'lowerlast', 'a@B_9.ru', '0', '9999999999', 'a']"]}