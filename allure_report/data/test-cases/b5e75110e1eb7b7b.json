{"uid":"b5e75110e1eb7b7b","name":"test_web_table_add_person[input_data275]","fullName":"tests.elements_page_test.TestWebTables#test_web_table_add_person","historyId":"41e9f756b00827eeaf3e6b418696b91b","time":{"start":1693430905392,"stop":1693430906801,"duration":1409},"description":" Check if one new person could be added in the list ","descriptionHtml":"<p>Check if one new person could be added in the list</p>\n","status":"failed","statusMessage":"AssertionError: Registration Form is not closed after submitting!\nassert 0 == 1\n +  where 0 = <bound method WebTablesPage.get_form_status_is_closed of <pages.element_page.WebTablesPage object at 0x000000C3A88D2550>>()\n +    where <bound method WebTablesPage.get_form_status_is_closed of <pages.element_page.WebTablesPage object at 0x000000C3A88D2550>> = <pages.element_page.WebTablesPage object at 0x000000C3A88D2550>.get_form_status_is_closed\n +      where <pages.element_page.WebTablesPage object at 0x000000C3A88D2550> = <elements_page_test.TestElements.TestWebTables object at 0x000000C3A832EDD0>.web_table_page","statusTrace":"self = <elements_page_test.TestElements.TestWebTables object at 0x000000C3A832EDD0>\ninput_data = ['25aaaaaaaaaaaaaaaaaafirst', 'lu cas', 'a@b.eu8ru', '99', '9999999999', '']\n\n    def test_web_table_add_person(self, input_data):\n        \"\"\" Check if one new person could be added in the list \"\"\"\n        expected_person = self.web_table_page.create_specified_person(input_data)\n    \n        with allure.step('Check if form is closed'):\n>           assert self.web_table_page.get_form_status_is_closed() == 1, \\\n                'Registration Form is not closed after submitting!'\nE           AssertionError: Registration Form is not closed after submitting!\nE           assert 0 == 1\nE            +  where 0 = <bound method WebTablesPage.get_form_status_is_closed of <pages.element_page.WebTablesPage object at 0x000000C3A88D2550>>()\nE            +    where <bound method WebTablesPage.get_form_status_is_closed of <pages.element_page.WebTablesPage object at 0x000000C3A88D2550>> = <pages.element_page.WebTablesPage object at 0x000000C3A88D2550>.get_form_status_is_closed\nE            +      where <pages.element_page.WebTablesPage object at 0x000000C3A88D2550> = <elements_page_test.TestElements.TestWebTables object at 0x000000C3A832EDD0>.web_table_page\n\ntests\\elements_page_test.py:85: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1693430445726,"stop":1693430445820,"duration":94},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0},{"name":"driver","time":{"start":1693430468302,"stop":1693430474075,"duration":5773},"status":"passed","steps":[{"name":"Start Firefox engine","time":{"start":1693430468302,"stop":1693430474075,"duration":5773},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"stepsCount":1},{"name":"web_table_setup","time":{"start":1693430905132,"stop":1693430905392,"duration":260},"status":"passed","steps":[{"name":"Setup WebTablesPage object and open its url","time":{"start":1693430905132,"stop":1693430905392,"duration":260},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"stepsCount":1},{"name":"screenshot_on_failure","time":{"start":1693430905132,"stop":1693430905132,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0}],"testStage":{"description":" Check if one new person could be added in the list ","status":"failed","statusMessage":"AssertionError: Registration Form is not closed after submitting!\nassert 0 == 1\n +  where 0 = <bound method WebTablesPage.get_form_status_is_closed of <pages.element_page.WebTablesPage object at 0x000000C3A88D2550>>()\n +    where <bound method WebTablesPage.get_form_status_is_closed of <pages.element_page.WebTablesPage object at 0x000000C3A88D2550>> = <pages.element_page.WebTablesPage object at 0x000000C3A88D2550>.get_form_status_is_closed\n +      where <pages.element_page.WebTablesPage object at 0x000000C3A88D2550> = <elements_page_test.TestElements.TestWebTables object at 0x000000C3A832EDD0>.web_table_page","statusTrace":"self = <elements_page_test.TestElements.TestWebTables object at 0x000000C3A832EDD0>\ninput_data = ['25aaaaaaaaaaaaaaaaaafirst', 'lu cas', 'a@b.eu8ru', '99', '9999999999', '']\n\n    def test_web_table_add_person(self, input_data):\n        \"\"\" Check if one new person could be added in the list \"\"\"\n        expected_person = self.web_table_page.create_specified_person(input_data)\n    \n        with allure.step('Check if form is closed'):\n>           assert self.web_table_page.get_form_status_is_closed() == 1, \\\n                'Registration Form is not closed after submitting!'\nE           AssertionError: Registration Form is not closed after submitting!\nE           assert 0 == 1\nE            +  where 0 = <bound method WebTablesPage.get_form_status_is_closed of <pages.element_page.WebTablesPage object at 0x000000C3A88D2550>>()\nE            +    where <bound method WebTablesPage.get_form_status_is_closed of <pages.element_page.WebTablesPage object at 0x000000C3A88D2550>> = <pages.element_page.WebTablesPage object at 0x000000C3A88D2550>.get_form_status_is_closed\nE            +      where <pages.element_page.WebTablesPage object at 0x000000C3A88D2550> = <elements_page_test.TestElements.TestWebTables object at 0x000000C3A832EDD0>.web_table_page\n\ntests\\elements_page_test.py:85: AssertionError","steps":[{"name":"Create specified person","time":{"start":1693430905392,"stop":1693430906268,"duration":876},"status":"passed","steps":[{"name":"\"Add\" click","time":{"start":1693430905392,"stop":1693430905688,"duration":296},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0},{"name":"Fill the form","time":{"start":1693430905688,"stop":1693430906028,"duration":340},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0},{"name":"\"Submit\" click","time":{"start":1693430906028,"stop":1693430906268,"duration":240},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0}],"attachments":[],"parameters":[{"name":"input_list","value":"['25aaaaaaaaaaaaaaaaaafirst', 'lu cas', 'a@b.eu8ru', '99', '9999999999', '']"}],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"stepsCount":3},{"name":"Check if form is closed","time":{"start":1693430906268,"stop":1693430906801,"duration":533},"status":"failed","statusMessage":"AssertionError: Registration Form is not closed after submitting!\nassert 0 == 1\n +  where 0 = <bound method WebTablesPage.get_form_status_is_closed of <pages.element_page.WebTablesPage object at 0x000000C3A88D2550>>()\n +    where <bound method WebTablesPage.get_form_status_is_closed of <pages.element_page.WebTablesPage object at 0x000000C3A88D2550>> = <pages.element_page.WebTablesPage object at 0x000000C3A88D2550>.get_form_status_is_closed\n +      where <pages.element_page.WebTablesPage object at 0x000000C3A88D2550> = <elements_page_test.TestElements.TestWebTables object at 0x000000C3A832EDD0>.web_table_page\n","statusTrace":"  File \"C:\\Users\\Ник\\PycharmProjects\\TestingUIForGit_POM\\tests\\elements_page_test.py\", line 85, in test_web_table_add_person\n    assert self.web_table_page.get_form_status_is_closed() == 1, \\\n","steps":[{"name":"Get form status","time":{"start":1693430906268,"stop":1693430906801,"duration":533},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"stepsCount":1}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"stepsCount":6},"afterStages":[{"name":"screenshot_on_failure::0","time":{"start":1693430906828,"stop":1693430906990,"duration":162},"status":"passed","steps":[],"attachments":[{"uid":"edb77e195316ce6d","name":"test_web_table_add_person[input_data275]-2023-08-31-00-28-26.828486","source":"edb77e195316ce6d.png","type":"image/png","size":182689}],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":1,"hasContent":true,"stepsCount":0},{"name":"driver::0","time":{"start":1693431164077,"stop":1693431165754,"duration":1677},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0}],"labels":[{"name":"feature","value":"Web Tables page has a person's data list and functions add/edit/delete for it"},{"name":"subSuite","value":"Web Tables"},{"name":"suite","value":"Elements"},{"name":"tag","value":"@pytest.mark.xfail(False, reason='Negative data tests', run=True)"},{"name":"tag","value":"@pytest.mark.usefixtures('web_table_setup')"},{"name":"parentSuite","value":"tests"},{"name":"host","value":"Nick"},{"name":"thread","value":"7104-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.elements_page_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"input_data","value":"['25aaaaaaaaaaaaaaaaaafirst', 'lu cas', 'a@b.eu8ru', '99', '9999999999', '']"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["@pytest.mark.usefixtures('web_table_setup')","@pytest.mark.xfail(False, reason='Negative data tests', run=True)"]},"source":"b5e75110e1eb7b7b.json","parameterValues":["['25aaaaaaaaaaaaaaaaaafirst', 'lu cas', 'a@b.eu8ru', '99', '9999999999', '']"]}